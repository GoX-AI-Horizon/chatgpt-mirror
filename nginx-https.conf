server {
    listen              443 ssl http2;
    listen              [::]:443 ssl http2;
    server_name         ai.taskchatshare.top;

    # SSL 文件 START
    ssl_certificate     /etc/letsencrypt/live/ai.taskchatshare.top/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ai.taskchatshare.top/privkey.pem;
    # SSL 文件 END

    # 日志文件 START
    access_log /data/logs/ngx.chatgpt.access.log;
    error_log /data/logs/ngx.chatgpt.error.log;
    # 日志文件 END

    # 屏蔽无效文件 START
    location ~* \.js\.map$ {
        return 404;
    }
    # 屏蔽无效文件 END

    client_header_buffer_size 4k;
    large_client_header_buffers 8 16k;

    location / {
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $http_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

        proxy_pass http://127.0.0.1:50002;
    }

    # 添加 WebRTC 代理配置
    location /webrtc {
        proxy_pass https://webrtc.chatgpt.com;
        proxy_set_header Host webrtc.chatgpt.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header REMOTE-HOST $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        add_header X-Cache $upstream_cache_status;
        add_header Cache-Control no-cache;
        proxy_ssl_server_name on;
    }

    # GLOBAL-CACHE START
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|otf|eot|svg|mp4|webm|ogg|ogv|zip|pdf)$ {
        proxy_cache newchat_cache;
        proxy_cache_valid 200 60m;   # 对状态码200的响应缓存60分钟

        # 设置静态文件的缓存控制，浏览器缓存控制
        expires 7d;

        # 添加响应头部
        add_header X-Cache-Status $upstream_cache_status;

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_pass http://127.0.0.1:50002;
    }
    # GLOBAL-CACHE END
}

# HTTP redirect
server {
    listen      80;
    listen      [::]:80;
    server_name ai.taskchatshare.top;
    return      301 https://ai.taskchatshare.top$request_uri;
}

# 缓存路径配置
proxy_cache_path /etc/nginx/cache/newchat levels=1:2 keys_zone=newchat_cache:20m inactive=1d max_size=3g;